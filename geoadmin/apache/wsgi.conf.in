#
# The Apache mod_wsgi configuration file.
#
# We use mod_wsgi's daemon mode. And we assign a specific process
# group to the WSGI application.
#
# Note: once we use mod_wsgi 3 we'll be able to get rid of the
# Location block by passing process-group and application-group
# options to the WSGIScriptAlias directive.
#

RewriteEngine on
ExpiresActive on

AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE application/x-javascript application/javascript application/json
AddOutputFilterByType DEFLATE text/html text/plain text/xml

# Static files with normal cache:
RewriteRule ^/${vars:instanceid}/wsgi/(app|build|lib)/(.*)$  ${buildout:directory/geoadmin/public/$1/$2}

# Static files with aggressive cache:
RewriteRule ^/${vars:instanceid}/wsgi/[0-9a-fA-F]*/(app|build|lib)/(.*)$  ${buildout:directory/geoadmin/public/$1/$2}
<LocationMatch "/${vars:instanceid}/wsgi/[0-9a-fA-F]*/(app|build|lib)/">
    ExpiresDefault "now plus 1 year"
    Header merge Cache-Control "public"
    Header unset Etag
</LocationMatch>

# checker and feedback:
RewriteRule ^${vars:apache-entry-point}(checker|feedback)(.*)$ /${vars:instanceid}/wsgi/$1$2 [PT]

RewriteRule ^${vars:apache-entry-point}$ /${vars:instanceid}/wsgi/ [PT]

# define a process group
WSGIDaemonProcess mf-geoadmin2:${vars:instanceid} display-name=%{GROUP} user=${vars:modwsgi_user}

# define the path to the WSGI app
WSGIScriptAlias /${vars:instanceid}/wsgi ${buildout:directory/buildout/parts/modwsgi/wsgi}

# assign the WSGI app instance the process group defined aboven, we put the WSGI
# app instance in the global application group so it is always executed within
# the main interpreter
<Location /${vars:instanceid}/wsgi>
    WSGIProcessGroup mf-geoadmin2:${vars:instanceid}
    WSGIApplicationGroup %{GLOBAL}
</Location>
